{"version":3,"sources":["Component/IncrementDec.js","Component/SlotMachine.js","App.js","reportWebVitals.js","index.js"],"names":["IncrementDec","inc","newNum","state","number","setState","dec","Fragment","className","this","onClick","React","Component","SlotM","props","x","y","z","SlotMachine","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAuCeA,E,kDApCX,aAAe,IAAD,8BACV,gBAMJC,IAAM,WACF,IAAIC,EAAS,EAAKC,MAAMC,OAAS,EACjC,EAAKC,SAAS,CACVD,OAAQF,KAVF,EAcdI,IAAM,WACF,IAAIJ,EAAS,EAAKC,MAAMC,OAAS,EACjC,EAAKC,SAAS,CACVD,OAAQF,KAfZ,EAAKC,MAAQ,CACTC,OAAQ,GAHF,E,qDAsBV,OACI,eAAC,IAAMG,SAAP,WACI,+EACA,sBAAKC,UAAU,SAAf,UACI,6BAAKC,KAAKN,MAAMC,SAChB,wBAAQM,QAASD,KAAKH,IAAtB,uBACA,wBAAQI,QAASD,KAAKR,IAAtB,iC,GA7BOU,IAAMC,W,MCAjC,SAASC,EAAMC,GAAQ,IACfC,EAASD,EAATC,EAAEC,EAAOF,EAAPE,EAAEC,EAAKH,EAALG,EACR,OAAGF,IAAIC,GAAKA,IAAIC,EAER,eAAC,IAAMV,SAAP,WACI,uBACA,+BAAKQ,EAAL,IAASC,EAAT,IAAaC,KACb,kDACA,0BAMJ,eAAC,IAAMV,SAAP,WACI,uBACA,+BAAKQ,EAAL,IAASC,EAAT,IAAaC,KACb,sDACA,0BAMD,SAASC,IACpB,OACI,eAAC,IAAMX,SAAP,WACI,qBAAKC,UAAU,MAAf,SACI,4FAEJ,sBAAKA,UAAU,OAAf,UACI,cAACK,EAAD,CAAOE,EAAE,eAAKC,EAAE,eAAKC,EAAE,iBACvB,cAACJ,EAAD,CAAOE,EAAE,eAAKC,EAAE,eAAKC,EAAE,iBACvB,cAACJ,EAAD,CAAOE,EAAE,eAAKC,EAAE,eAAKC,EAAE,uBCrBxBE,MATf,WACE,OACE,eAAC,IAAMZ,SAAP,WACE,cAAC,EAAD,IACA,cAACW,EAAD,QCGSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ccedbdb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass IncrementDec extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            number: 0\r\n        }\r\n    }\r\n\r\n    inc = () => {\r\n        let newNum = this.state.number + 2;\r\n        this.setState({\r\n            number: newNum\r\n        })\r\n    }\r\n\r\n    dec = () => {\r\n        let newNum = this.state.number - 2;\r\n        this.setState({\r\n            number: newNum\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <h1>üëç Increment Decrement üëé</h1>\r\n                <div className=\"incDec\">\r\n                    <h1>{this.state.number}</h1>\r\n                    <button onClick={this.dec}>Decrement</button>\r\n                    <button onClick={this.inc}>Increment</button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default IncrementDec","import React from 'react';\r\n\r\nfunction SlotM(props) {\r\n    let{x,y,z} = props;\r\n    if(x===y && y===z) {\r\n        return(\r\n            <React.Fragment>\r\n                <hr />\r\n                <h1>{x} {y} {z}</h1>\r\n                <h5>This is matching</h5>\r\n                <hr />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <React.Fragment>\r\n                <hr />\r\n                <h1>{x} {y} {z}</h1>\r\n                <h5>This is not matching</h5>\r\n                <hr />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function SlotMachine() {\r\n    return(\r\n        <React.Fragment>          \r\n            <div className=\"App\">\r\n                <h1> üé∞ Welcome to slot machine game üé∞ </h1>\r\n            </div>\r\n            <div className=\"page\">\r\n                <SlotM x=\"ü§£\" y=\"üòÅ\" z=\"ü§ë\" />\r\n                <SlotM x=\"ü§¢\" y=\"ü§¢\" z=\"ü§¢\" />\r\n                <SlotM x=\"ü§°\" y=\"üí©\" z=\"üëπ\" />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\nimport IncrementDec from './Component/IncrementDec.js';\nimport './App.css';\nimport SlotMachine from './Component/SlotMachine.js';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <IncrementDec />\n      <SlotMachine />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}